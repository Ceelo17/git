verifica o estado da branch
git status

adiciona um arquivo para stage
	git add file.txt

adiciona todos os arquivos para stage
	git add .

deletar um arquivo específico - passar para unstage
	git rm --cached file.txt

deletar todos os arquivos - passar para unstage
o -r significa de maneira recursiva
o ponto seleciona todos os arquivos
	git rm --cached -r .

commitar
	git commit -m ""


4 estados

untracted - não rastreado
	- após adicionar o arquivo vai para staged
unmodified - não modificado
	- após modificar o arquivo vai para modified
staged - preparado
	- após commitar o arquivo vai para unmodified
modified - modificado
	- após descartar alterações o arquivo vai para unmodified

untracked - não rastreado pelo git
tracked (unmodified, modified, staged) - rastreado pelo git

cenário que um arquivo se encontra em dois estados ao mesmo tempo
	- é possível que um arquivo esteja em dois estados ao mesmo tempo, por exemplo, ao modificar um arquivo e adiciona-lo passando para stage e após isso modificar novamente, o git cria uma cópia do arquivo em stage e caso não seja adicionado a nova alteração e seja feito o commit, somente o que está em stage será commitado

faz a comparação de dois arquivos (versão modificada e a versão não modificada) mostrando a diferença do que foi modificado, usa o arquivo modificado x arquivo commitado
	git diff

caso o arquivo esteja já em stage deve utilizar --cached ou --staged
	git diff --cached
	git diff --staged

lista todas as alterações (commits) do mais recente para o mais antigo
mostra o sha-1 código
head aponta para o último commit
	git log

configura o email e o nome
	git config --global user.email
	git config --global user.name

se aparecer : ao final do git bash quer dizer que tem mais arquivos para baixo e para sair dessa configuração aperte q de "quite"

lista todas as alterações (commits) sem o nome do author, nem a data e o email, somente com o hash e o nome do commit
	git log --oneline

lista um número específico de commits que devem aparecer
	git log -n
	git log -1
	git log -3

lista o histórico de commits com as diferenças (patches) de cada commit
	git log -p

lista um resumo estático das alterações de cada commit
	git log --stat
	git log --shortstat --oneline

altera a mensagem do último commit ou é possível adicionar arquivos nesse commit
	git commit --amend -m ""
	git commit --amend --no-edit (commita sem alterar a mensagem do commit)
	git commit --amend (abre o editor vim)
para editar o commit via vim aperte a tecla I para mudar para INSERT, altere a mensagem e aperte ESC para sair do modo edição, para salvar :wq (write and quite) e para sair sem salvar :q!
deve utilizar o amend com cuidado pois caso a branch seja compartilhada ele exclui o último hash e commita um novo para alterar a mensagem do commit ou fazer alterações no arquivo, caso alguém esteja trabalhando no mesmo commit estará em uma versão antiga e que com o --amend que foi deletada podendo perder algum processo

é possível alterar o editor padrão (vim) para outro editor da sua esolha com uma interface mais amigável, como por exemplo o visual studio code, nele somente alterando, salvando e fechando-o já realiza as alterações sem precisar dos comandos do vim (é necessário já ter instalado o outro editor)
	git config --global core.editor "code --wait"

abre o visual studio code diretamente na pasta
code .

alterna entre os commits para visualizar os arquivos como estavam naquele commit e útil caso o projeto esteja sendo executado
git checkout código hash